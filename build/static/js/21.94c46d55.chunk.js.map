{"version":3,"file":"static/js/21.94c46d55.chunk.js","mappings":"mMAkFA,EA7Ee,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCC,EAAN,EAAMA,IAAKC,EAAX,EAAWA,aACX,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OAAIV,EAAJ,gCAAuC,CAC1CW,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACc,IAAD,EAAlB,OAAIA,QAAJ,IAAIA,GAAAA,EAAMC,SACRd,EAAa,OAACa,QAAD,IAACA,GAAD,UAACA,EAAME,QAAQ,UAAf,aAAC,EAAkBC,aAChCd,GAAiB,GAEpB,IACAe,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACtB,EAAKK,EAAeE,IAuBxB,OACE,iBAAKkB,UAAU,WAAf,WACE,6CAEA,iBAAKA,UAAU,4CAAf,WACE,gBAAKA,UAAU,KAAf,UACE,uBAAIxB,OAEN,wBACE,4CACe,IACG,KAAfE,EAAA,UACG,IAAIuB,KAAKvB,UADZ,aACG,EAAsBwB,qBACtB,eAIV,gBAAKF,UAAU,WAAf,UACE,mBACEA,UAAU,8BACVG,QA1CK,WACXpB,GAAa,GACbE,MAAM,GAAD,OAAIV,EAAJ,yBAAgC,CACnCW,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACLT,GAAa,GACb,OAAIS,QAAJ,IAAIA,GAAAA,EAAMC,SACRW,MAAK,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAME,SACZb,GAAiB,GAEpB,IACAe,OAAM,SAACC,GACNd,GAAa,GACbe,QAAQC,IAAIF,EACb,GACJ,EAsBOQ,SAAUvB,EAHZ,SAKGA,GAAY,SAACwB,EAAA,EAAAA,OAAD,IAAoB,eAK1C,C","sources":["components/Main/backup/Backup.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Backup.css\";\r\nimport { MainContext } from \"../Helpers/Context\";\r\nimport Loader from \"../../small_comps/loader/Loader\";\r\n\r\nconst Backup = () => {\r\n  let { url, loggedSchool } = useContext(MainContext);\r\n  const [backupDate, setBackupDate] = useState(\"\");\r\n  const [refreshBackup, setrefreshBackup] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`${url}/main/settings/backup-record`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data?.status) {\r\n          setBackupDate(data?.message[0]?.backup_date);\r\n          setrefreshBackup(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [url, refreshBackup, isLoading]);\r\n  let backup = () => {\r\n    setIsLoading(true);\r\n    fetch(`${url}/main/settings/backup`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        if (data?.status) {\r\n          alert(data?.message);\r\n          setrefreshBackup(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"__backup\">\r\n      <h2>Backup Database</h2>\r\n\r\n      <div className=\"container alert alert-warning backup-cont\">\r\n        <div className=\"h6\">\r\n          <b>{loggedSchool}</b>\r\n        </div>\r\n        <p>\r\n          <small>\r\n            last backup:{\" \"}\r\n            {backupDate !== \"\"\r\n              ? new Date(backupDate)?.toLocaleDateString()\r\n              : \"Nil\"}\r\n          </small>\r\n        </p>\r\n      </div>\r\n      <div className=\"btn-cont\">\r\n        <button\r\n          className=\"btn btn-primary btn-sm mt-2\"\r\n          onClick={backup}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? <Loader.Loader /> : \"Backup\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Backup;\r\n"],"names":["useContext","MainContext","url","loggedSchool","useState","backupDate","setBackupDate","refreshBackup","setrefreshBackup","isLoading","setIsLoading","useEffect","fetch","method","headers","credentials","then","res","json","data","status","message","backup_date","catch","err","console","log","className","Date","toLocaleDateString","onClick","alert","disabled","Loader"],"sourceRoot":""}