{"version":3,"file":"static/js/37.059cf994.chunk.js","mappings":"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","sources":["components/Main/fees/Fees.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./fees.css\";\r\nimport ModalCont from \"../../small_comps/modal/ModalCont\";\r\nimport { MainContext } from \"../Helpers/Context\";\r\nimport { Notifications } from \"react-push-notification\";\r\nimport { useRef } from \"react\";\r\nimport { RiRefreshLine, RiSearchLine } from \"react-icons/ri\";\r\nconst Fees = () => {\r\n  let date = new Date();\r\n  let dateArr = [\r\n    date.getDate() < 10 ? `0${date.getDate()}` : date.getDate(),\r\n    date.getUTCMonth() + 1 < 10\r\n      ? `0${date.getUTCMonth() + 1}`\r\n      : date.getUTCMonth() + 1,\r\n    date.getUTCFullYear(),\r\n  ];\r\n  const [name, setName] = useState(\"\");\r\n  const [filteredClass, setFilteredClass] = useState(\"\");\r\n  const [filteredSess, setFilteredSess] = useState(\"\");\r\n  const [filteredTerm, setFilteredTerm] = useState(\"\");\r\n  const [classes, setClasses] = useState([]);\r\n  const [sessions, setSessions] = useState([]);\r\n  const [autoname, setAutoName] = useState([]);\r\n  const [terms, setTerms] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [searchId, setSearchId] = useState(0);\r\n  const [paymentForArr, setPaymentForArr] = useState([]);\r\n  const [paymentFor, setPaymentFor] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentMethodArr, setPaymentMethodArr] = useState([]);\r\n  const [balanceUser, setBalanceUser] = useState(\"\");\r\n  const [paymentId, setPaymentId] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n  const [remark, setRemark] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [DOG] = useState(dateArr.join(\"/\"));\r\n  const [DOP, setDOP] = useState(\"\");\r\n  const [balanceDate, setBalanceDate] = useState(\"\");\r\n  const [advance, setAdvance] = useState(0);\r\n  const [keyId, setkeyId] = useState(\"\");\r\n  const [balancePayment, setBalancePayment] = useState(\"\");\r\n  const [balanceClass, setBalanceClass] = useState(\"\");\r\n  const [showDOB, setShowDOB] = useState(false);\r\n  const filterArray = [];\r\n  const [records, setRecords] = useState([]);\r\n  const [ErrArr, setErrArr] = useState([]);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const limit = 8;\r\n  let autoCom = useRef();\r\n  let { url, loggedUser, notifications, io } = useContext(MainContext);\r\n  let fetchFilters = () => {\r\n    fetch(`${url}/main/payment/classes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status) {\r\n          let newCls;\r\n          newCls = data.message[0];\r\n          try {\r\n            setTerms(newCls.terms.split(\",\"));\r\n            setSessions(newCls.sessions.split(\",\"));\r\n            setClasses(JSON.parse(newCls.classes));\r\n            setPaymentForArr(newCls.payment_for.split(\",\"));\r\n            setPaymentMethodArr(newCls.payment_method.split(\",\"));\r\n          } catch {\r\n            console.log(\"failed to set datas\");\r\n          }\r\n        }\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let fetchRecord = () => {\r\n    setIsLoading(true);\r\n    fetch(`${url}/main/fees/records?page=${currentPage}&limit=${limit}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        if (data.status) {\r\n          try {\r\n            setRecords(data.message);\r\n            setTotalPages(Math.ceil(data.total / limit));\r\n          } catch {\r\n            notifications.warning(\"Failed to set datas\");\r\n          }\r\n        } else {\r\n          notifications.warning(data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchRecord();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n  useEffect(() => {\r\n    fetchFilters();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [document.readyState]);\r\n  let autoCompleteName = () => {\r\n    setSearchId(0);\r\n    if (name.length > 1) {\r\n      if (filteredClass !== \"\") {\r\n        filterArray.push({ class: filteredClass });\r\n      }\r\n      if (filteredSess !== \"\") {\r\n        filterArray.push({ session: filteredSess });\r\n      }\r\n      if (filteredTerm !== \"\") {\r\n        filterArray.push({ term: filteredTerm });\r\n      }\r\n      if (filterArray.length > 0) {\r\n        fetch(`${url}/main/fees/find-name`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            name,\r\n            condition: true,\r\n            filterArray,\r\n          }),\r\n          credentials: \"include\",\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            if (data.status) {\r\n              setAutoName(data.message);\r\n            }\r\n          })\r\n\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        fetch(`${url}/main/fees/find-name`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            name,\r\n            condition: false,\r\n          }),\r\n          credentials: \"include\",\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            if (data.status) {\r\n              setAutoName(data.message);\r\n            }\r\n          })\r\n\r\n          .catch((err) => console.log(err));\r\n      }\r\n    } else {\r\n      setAutoName([]);\r\n    }\r\n  };\r\n  let handlePageChange = (newPage) => {\r\n    setcurrentPage(newPage);\r\n    fetch(`${url}/main/fees/records?page=${currentPage}&limit=${limit}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        if (data.status) {\r\n          try {\r\n            setRecords(data.message);\r\n            // console.log(data.message)\r\n          } catch {\r\n            console.log(\"failed to set datas\");\r\n          }\r\n        } else {\r\n          notifications.warning(data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n  const clickAutoName = (id) => {\r\n    let details = autoname.find((item) => item.payment_id === id);\r\n    setName(details.name.toUpperCase());\r\n    setAutoName([]);\r\n    setSearchId(id);\r\n  };\r\n  let findId = (e) => {\r\n    e.preventDefault();\r\n    setAutoName([]);\r\n    setFilteredClass(\"\");\r\n    setFilteredSess(\"\");\r\n    setFilteredTerm(\"\");\r\n    document.querySelector(\".filter-class\").classList.add(\"filter\");\r\n    let status = false;\r\n    if (searchId > 0) status = true;\r\n    else status = false;\r\n    let datas = {\r\n      searchId,\r\n      name: name.trim().toLowerCase(),\r\n      status,\r\n    };\r\n    if (searchId || name) {\r\n      fetch(`${url}/main/fees/findId`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(datas),\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.status) {\r\n            setRecords((prev) => data.message);\r\n          }\r\n        })\r\n\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      notifications.warning(\"Empty search\");\r\n    }\r\n  };\r\n  let setFilteredClassFnc = (e) => {\r\n    setFilteredClass(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      document.querySelector(\".filter-class\").classList.add(\"filter\");\r\n    } else {\r\n      document.querySelector(\".filter-class\").classList.remove(\"filter\");\r\n    }\r\n    throw new Error();\r\n  };\r\n  let setFilteredTermFnc = (e) => {\r\n    setFilteredTerm(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      document.querySelector(\".filter-term\").classList.add(\"filter\");\r\n    } else {\r\n      document.querySelector(\".filter-term\").classList.remove(\"filter\");\r\n    }\r\n  };\r\n  let setFilteredSessFnc = (e) => {\r\n    setFilteredSess(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      document.querySelector(\".filter-sess\").classList.add(\"filter\");\r\n    } else {\r\n      document.querySelector(\".filter-sess\").classList.remove(\"filter\");\r\n    }\r\n  };\r\n  let setAdvanceFee = (e) => {\r\n    setAdvance(e.target.value);\r\n    if (parseInt(e.target.value) > parseInt(balancePayment)) {\r\n      e.target.style.border = \"1px solid red\";\r\n      notifications.warning(\"Advance is greater than balance\");\r\n      setErrArr([\"advance is greater than balance\"]);\r\n    } else {\r\n      e.target.style.border = \"1px solid gainsboro\";\r\n      setErrArr([]);\r\n    }\r\n  };\r\n  let reset = () => {\r\n    setBalanceUser(\"\");\r\n    setPaymentId(\"\");\r\n    setTotal(\"\");\r\n    setBalancePayment(\"\");\r\n    setTerm(\"\");\r\n    setSession(\"\");\r\n    setkeyId(\"\");\r\n    setAdvance(0);\r\n    setPaymentFor(\"\");\r\n    setPaymentMethod(\"\");\r\n    setDOP(\"\");\r\n    setRemark(\"\");\r\n    setBalanceDate(\"\");\r\n  };\r\n  let balanceFeeBtn = (key) => {\r\n    reset();\r\n    let balanceDetails = records.find((record) => record.keyid === key);\r\n    setBalanceUser(balanceDetails.name.toUpperCase());\r\n    setBalanceClass(balanceDetails.class.toUpperCase());\r\n    setPaymentId(balanceDetails.payment_id);\r\n    setTotal(parseInt(balanceDetails.expected_payment));\r\n    setBalancePayment(parseInt(balanceDetails.balance));\r\n    setTerm(balanceDetails.term);\r\n    setSession(balanceDetails.session);\r\n    setkeyId(balanceDetails.keyid);\r\n    document.getElementsByClassName(\"fee-modal\")[0].classList.add(\"show-modal\");\r\n    document.body.style.overflow = \"hidden\";\r\n    window.scrollTo(0, parseInt(window.scrollY || \"0\") * -1);\r\n  };\r\n  let saveBalance = () => {\r\n    if (\r\n      paymentFor === \"\" ||\r\n      paymentMethod === \"\" ||\r\n      advance === \"\" ||\r\n      date === \"\"\r\n    ) {\r\n      notifications.warning(\"Fill in all fields\");\r\n    } else {\r\n      if (remark === \"\") setRemark(paymentFor);\r\n      if (ErrArr.length > 0) notifications.warning(ErrArr[0]);\r\n      else {\r\n        fetch(`${url}/main/fees/save`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n          body: JSON.stringify({\r\n            name: balanceUser.toLowerCase(),\r\n            payment_id: paymentId,\r\n            amount_paid: advance,\r\n            expected_payment: total,\r\n            balance: balancePayment - advance,\r\n            term: term.toLowerCase(),\r\n            session,\r\n            DOG,\r\n            DOP,\r\n            balanceClass,\r\n            balance_date: balanceDate,\r\n            remark: remark ? remark.toLowerCase() : paymentFor.toLowerCase(),\r\n            keyid: keyId,\r\n            payment_for: paymentFor.toLowerCase(),\r\n            payment_method: paymentMethod.toLowerCase(),\r\n            accountant: loggedUser.toLowerCase(),\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            if (data.status) {\r\n              notifications.success(data.message);\r\n              fetchRecord();\r\n              io.emit(\"display_notification\", {\r\n                type:\r\n                  parseInt(balancePayment) - parseInt(advance) === 0\r\n                    ? \"cleared\"\r\n                    : \"part\",\r\n                name: balanceUser.toLowerCase(),\r\n                payment_id: paymentId,\r\n                amount_paid: advance,\r\n              });\r\n              document\r\n                .getElementsByClassName(\"fee-modal\")[0]\r\n                .classList.remove(\"show-modal\");\r\n              document.body.style.overflow = \"auto\";\r\n              document.body.style.top = \"\";\r\n              reset();\r\n            } else {\r\n              notifications.warning(data.message);\r\n            }\r\n          })\r\n\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  let dob = () => {\r\n    if (advance > 0) {\r\n      if (\r\n        ErrArr.length === 0 &&\r\n        parseInt(balancePayment) - parseInt(advance) > 0\r\n      ) {\r\n        setShowDOB(true);\r\n      }\r\n      if (\r\n        ErrArr.length === 0 &&\r\n        parseInt(balancePayment) - parseInt(advance) === 0\r\n      ) {\r\n        setShowDOB(false);\r\n      }\r\n    } else {\r\n      setShowDOB(false);\r\n    }\r\n  };\r\n  let autoAdvance = () => {\r\n    if (balancePayment) {\r\n      setAdvance(balancePayment);\r\n    }\r\n  };\r\n  let clear = (e) => {\r\n    e.preventDefault();\r\n    setName(\"\");\r\n    setAutoName([]);\r\n    setFilteredClass(\"\");\r\n    document.querySelector(\".filter-class\").classList.add(\"filter\");\r\n    fetchRecord();\r\n  };\r\n  let setDOBFnc = (e) => {\r\n    if (new Date(e.target.value) < new Date(Date.now())) {\r\n      notifications.warning(\"Balance Date is should be in the future\");\r\n      e.target.style.border = \"1px solid red\";\r\n    } else {\r\n      e.target.style.border = \"1px solid gray\";\r\n      setBalanceDate(e.target.value);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let handleBlur = (e) => {\r\n      if (autoCom.current) {\r\n        if (!autoCom.current.contains(e.target)) {\r\n          setAutoName([]);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleBlur);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleBlur);\r\n    };\r\n  }, [autoCom]);\r\n\r\n  return (\r\n    <div className=\"__fees\">\r\n      <Notifications position=\"top-right\" />\r\n      <h2>Balance Fee</h2>\r\n      <form className=\"search-container\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <div className=\"input-filter-cont\">\r\n          <input\r\n            type=\"select\"\r\n            id=\"name\"\r\n            value={name}\r\n            onKeyUp={() => autoCompleteName(name)}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Enter Name to search\"\r\n          />\r\n          <div className=\"output-container\" id=\"form-id\" ref={autoCom}>\r\n            <div className=\"output-names\">\r\n              {autoname &&\r\n                autoname.map((item) => (\r\n                  <div\r\n                    className=\"names\"\r\n                    onClick={() => clickAutoName(item?.payment_id)}\r\n                    key={item?.keyid}\r\n                  >\r\n                    <span>{item?.name}</span> <span>{item?.class}</span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <select\r\n          value={filteredClass}\r\n          onChange={(e) => setFilteredClassFnc(e)}\r\n          className=\"filter-class\"\r\n        >\r\n          <option value=\"\">Class</option>\r\n          {classes &&\r\n            classes.map((elem) => (\r\n              <option value={elem.toUpperCase()} key={Math.random()}>\r\n                {elem.toUpperCase()}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <select\r\n          value={filteredTerm}\r\n          onChange={(e) => setFilteredTermFnc(e)}\r\n          className=\"filter-term\"\r\n        >\r\n          <option value=\"\">Term</option>\r\n          {terms &&\r\n            terms.map((elem) => (\r\n              <option value={elem.toUpperCase()} key={Math.random()}>\r\n                {elem.toUpperCase()}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <select\r\n          value={filteredSess}\r\n          onChange={(e) => setFilteredSessFnc(e)}\r\n          className=\"filter-sess\"\r\n        >\r\n          <option value=\"\">Session</option>\r\n          {sessions &&\r\n            sessions.map((elem) => (\r\n              <option value={elem.toUpperCase()} key={Math.random()}>\r\n                {elem.toUpperCase()}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <div className=\"btn-cont\">\r\n          <button onClick={(e) => findId(e)} className=\"btn btn-success btn-sm\">\r\n            {\" \"}\r\n            <RiSearchLine />\r\n            <span style={{ marginLeft: \".3rem\" }}>Find</span>\r\n          </button>\r\n          <button onClick={(e) => clear(e)} className=\"btn btn-danger btn-sm\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"balance-table\">\r\n        <div\r\n          className=\"refresh\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            margin: \".2rem 0\",\r\n          }}\r\n        >\r\n          <span\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => fetchRecord()}\r\n            title=\"Refresh\"\r\n          >\r\n            <RiRefreshLine />\r\n          </span>\r\n        </div>\r\n        <table border={1} className=\"table table-responsive table-bordered\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>payment id</th>\r\n              <th>Class</th>\r\n              <th>Balance (&#x20A6;)</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {isLoading ? (\r\n              <tr className=\"loading\">\r\n                <td colSpan={5} style={{ textAlign: \"center\" }}>\r\n                  loading...\r\n                </td>\r\n              </tr>\r\n            ) : records.length === 0 ? (\r\n              <tr className=\"loading\">\r\n                <td colSpan={5} style={{ textAlign: \"center\" }}>\r\n                  No records available\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              records.map((record, index) => (\r\n                <tr key={record.keyid + new Date() + Math.random()}>\r\n                  <td>{record.name}</td>\r\n                  <td>{record.payment_id} </td>\r\n                  <td>{record.class} </td>\r\n                  <td>{parseInt(record.balance).toLocaleString()} </td>\r\n                  <td>\r\n                    <div className=\"action-cont\">\r\n                      <div\r\n                        onClick={() => balanceFeeBtn(record.keyid)}\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                      >\r\n                        balance Fee\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        {records.length > 0 && (\r\n          <div className=\"pagination-buttons\">\r\n            <button\r\n              onClick={() => handlePageChange(1)}\r\n              disabled={currentPage === 1}\r\n              className=\"first-page\"\r\n            >\r\n              First\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n              className=\"prev-page\"\r\n            >\r\n              Prev\r\n            </button>\r\n            {Array.from(Array(totalPages).keys()).map((page) => {\r\n              if (page <= 7) {\r\n                return (\r\n                  <button\r\n                    key={page + 1}\r\n                    onClick={() => handlePageChange(page + 1)}\r\n                    className={currentPage - 1 === page ? \"active\" : \"\"}\r\n                  >\r\n                    {page + 1}\r\n                  </button>\r\n                );\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })}\r\n            <button\r\n              onClick={() => handlePageChange(currentPage + 1)}\r\n              disabled={currentPage === totalPages}\r\n              className=\"next-page\"\r\n            >\r\n              Next\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange(totalPages)}\r\n              disabled={currentPage === totalPages}\r\n              className=\"last-page\"\r\n            >\r\n              Last\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ModalCont title=\"Balance Fee\" classModal=\"fee-modal\" save={saveBalance}>\r\n        <form action=\"\">\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"balance-user\">Name</label>\r\n            <input type=\"text\" value={balanceUser} disabled id=\"balance-user\" />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"payment-id\">Payment ID</label>\r\n            <input type=\"text\" value={paymentId} disabled id=\"payment-id\" />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"class\">Class</label>\r\n            <input type=\"text\" value={balanceClass} disabled id=\"class\" />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"total\">Total</label>\r\n            <input\r\n              type=\"text\"\r\n              value={total.toLocaleString()}\r\n              disabled\r\n              id=\"total\"\r\n            />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"balance-payment\">Balance</label>\r\n            <input\r\n              type=\"text\"\r\n              value={balancePayment.toLocaleString()}\r\n              onChange={(e) => setBalancePayment(e.target.value)}\r\n              disabled\r\n              id=\"balance-payment\"\r\n            />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"payment-type\">Payment Type</label>\r\n            <select\r\n              value={paymentFor}\r\n              onChange={(e) => setPaymentFor(e.target.value)}\r\n              className=\"payment-for\"\r\n              id=\"payment-type\"\r\n            >\r\n              <option value=\"\">Select Payment Type</option>\r\n              {paymentForArr &&\r\n                paymentForArr.map((elem) => (\r\n                  <option value={elem.toUpperCase()} key={Math.random()}>\r\n                    {elem.toUpperCase()}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"payment-method\">Payment Method</label>\r\n\r\n            <select\r\n              value={paymentMethod}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n              className=\"payment-method\"\r\n              id=\"payment-method\"\r\n            >\r\n              <option value=\"\">Select Payment Method</option>\r\n              {paymentMethodArr &&\r\n                paymentMethodArr.map((elem) => (\r\n                  <option value={elem.toUpperCase()} key={Math.random()}>\r\n                    {elem.toUpperCase()}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"advance\">Advance</label>\r\n            <input\r\n              type=\"number\"\r\n              value={advance}\r\n              onChange={(e) => setAdvanceFee(e)}\r\n              onDoubleClick={() => autoAdvance()}\r\n              id=\"advance\"\r\n              placeholder=\"Enter Advance\"\r\n              onBlur={() => dob()}\r\n            />\r\n          </div>\r\n          {showDOB && (\r\n            <div className=\"input-cont\">\r\n              <label htmlFor=\"dob\">Date of Balance</label>\r\n              <input\r\n                type=\"date\"\r\n                value={balanceDate}\r\n                onChange={(e) => setDOBFnc(e)}\r\n                id=\"dob\"\r\n                placeholder=\"Date of Balance\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"date\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={DOP}\r\n              onChange={(e) => setDOP(e.target.value)}\r\n              id=\"date\"\r\n              placeholder=\"Date of payment\"\r\n            />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"remark\">Remark</label>\r\n            <textarea\r\n              id=\"remark\"\r\n              value={remark}\r\n              onChange={(e) => setRemark(e.target.value)}\r\n              placeholder=\"Enter Remark\"\r\n            ></textarea>\r\n          </div>\r\n        </form>\r\n      </ModalCont>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fees;\r\n"],"names":["date","Date","dateArr","getDate","getUTCMonth","getUTCFullYear","useState","name","setName","filteredClass","setFilteredClass","filteredSess","setFilteredSess","filteredTerm","setFilteredTerm","classes","setClasses","sessions","setSessions","autoname","setAutoName","terms","setTerms","isLoading","setIsLoading","searchId","setSearchId","paymentForArr","setPaymentForArr","paymentFor","setPaymentFor","paymentMethod","setPaymentMethod","paymentMethodArr","setPaymentMethodArr","balanceUser","setBalanceUser","paymentId","setPaymentId","total","setTotal","remark","setRemark","term","setTerm","session","setSession","join","DOG","DOP","setDOP","balanceDate","setBalanceDate","advance","setAdvance","keyId","setkeyId","balancePayment","setBalancePayment","balanceClass","setBalanceClass","showDOB","setShowDOB","filterArray","records","setRecords","ErrArr","setErrArr","totalPages","setTotalPages","currentPage","setcurrentPage","autoCom","useRef","useContext","MainContext","url","loggedUser","notifications","io","fetchRecord","fetch","method","headers","credentials","then","res","json","data","status","message","Math","ceil","warning","catch","err","console","log","useEffect","newCls","split","JSON","parse","payment_for","payment_method","document","readyState","handlePageChange","newPage","reset","handleBlur","e","current","contains","target","addEventListener","removeEventListener","className","Notifications","position","htmlFor","type","id","value","onKeyUp","length","push","class","body","stringify","condition","onChange","autoComplete","placeholder","ref","map","item","onClick","details","find","payment_id","toUpperCase","clickAutoName","keyid","querySelector","classList","add","remove","Error","setFilteredClassFnc","elem","random","setFilteredTermFnc","setFilteredSessFnc","preventDefault","datas","trim","toLowerCase","prev","findId","style","marginLeft","clear","display","justifyContent","margin","cursor","title","border","colSpan","textAlign","record","index","parseInt","balance","toLocaleString","key","balanceDetails","expected_payment","getElementsByClassName","overflow","window","scrollTo","scrollY","balanceFeeBtn","disabled","Array","from","keys","page","ModalCont","classModal","save","amount_paid","balance_date","accountant","success","emit","top","action","setAdvanceFee","onDoubleClick","onBlur","now","setDOBFnc"],"sourceRoot":""}