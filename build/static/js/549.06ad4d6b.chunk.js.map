{"version":3,"file":"static/js/549.06ad4d6b.chunk.js","mappings":"gNA6GA,EAvGsB,WACpB,OAAyCA,EAAAA,EAAAA,YAAWC,EAAAA,GAA9CC,EAAN,EAAMA,IAAKC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,cACvB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACbE,MAAM,GAAD,OAAIT,EAAJ,+BAAsC,CACzCU,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACLT,GAAa,GACTS,EAAKC,QAAQZ,EAAQW,EAAKE,QAC/B,IACAC,OAAM,SAACC,GACNb,GAAa,GACbc,QAAQC,IAAIF,EACb,GAEJ,GAAE,KAEHZ,EAAAA,EAAAA,YAAU,WACRP,EAAW,GAEZ,GAAE,IAyBH,OACE,iBAAKsB,UAAU,kBAAf,WACE,2CACA,SAAC,gBAAD,CAAcC,SAAS,eAEvB,gBAAKD,UAAU,0BAAf,SACGjB,GACC,wCACkB,IAAhBF,EAAKqB,QACP,mDAEArB,EAAKsB,KAAI,SAACC,GAAD,OACP,iBAEEJ,UAC0B,MAAxBI,EAAaV,OACT,wCACA,0CALR,WAQE,gBACEM,UAAU,QACVK,QAAS,WA9CN,IAACC,KA8CsBF,EAAaE,KA5CjDpB,MAAM,GAAD,OAAIT,EAAJ,uCAAsC6B,GAAM,CAC/CnB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACDA,EAAKC,QACPf,EAAc4B,QAAQd,EAAKE,SAC3Bb,EAAQD,EAAK2B,QAAO,SAACC,GAAD,OAAYA,EAAOH,KAAOA,CAA1B,MAEpB3B,EAAc+B,QAAQjB,EAAKE,QAE9B,IACAC,OAAM,SAACC,GACNlB,EAAc+B,QAAQ,wBACtBZ,QAAQC,IAAIF,EACb,GAyBgB,EAFX,UAIE,SAAC,MAAD,CAAkBc,KAAK,WAEzB,iBAAKX,UAAU,yBAAf,UACG,KACD,SAAC,MAAD,IACCI,EAAaQ,UAEhB,gBAAKZ,UAAU,kBAAf,UACE,gBAAKA,UAAU,UAAf,SAA0BI,EAAaS,UAEzC,gBAAKC,MAAO,CAAEC,UAAW,SAAzB,UACE,6BACG,IAAIC,KAAKZ,EAAaa,YAAYC,qBAAsB,IAD3D,OAES,WAxBNd,EAAae,WAAaC,KAAKC,SAF/B,QAmClB,C","sources":["components/Main/notifications/Notifications.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./notifications.css\";\r\nimport { MainContext } from \"../Helpers/Context\";\r\nimport { RiDeleteBin3Fill, RiNotification3Fill } from \"react-icons/ri\";\r\nimport { Notifications as Notification } from \"react-push-notification\";\r\n\r\nconst Notifications = () => {\r\n  let { url, setNotiNum, notifications } = useContext(MainContext);\r\n  const [noti, setNoti] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(`${url}/main/records/notifications`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        if (data.status) setNoti(data.message);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNotiNum(\"\");\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  let removeNoti = (id) => {\r\n    if (id) {\r\n      fetch(`${url}/main/records/deleteNoti?id=${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.status) {\r\n            notifications.success(data.message);\r\n            setNoti(noti.filter((notifi) => notifi.id !== id));\r\n          } else {\r\n            notifications.warning(data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifications.warning(\"Something went wrong\");\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"__notifications\">\r\n      <h2>Notifications</h2>\r\n      <Notification position=\"top-right\" />\r\n\r\n      <div className=\"notification__container\">\r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : noti.length === 0 ? (\r\n          <div>No Notifications yet!</div>\r\n        ) : (\r\n          noti.map((notification) => (\r\n            <div\r\n              key={notification.payment_id + Math.random()}\r\n              className={\r\n                notification.status === \"1\"\r\n                  ? \"alert alert-secondary noti__cont seen\"\r\n                  : \"alert alert-primary noti__cont not-seen\"\r\n              }\r\n            >\r\n              <div\r\n                className=\"close\"\r\n                onClick={() => removeNoti(notification.id)}\r\n              >\r\n                <RiDeleteBin3Fill fill=\"red\" />\r\n              </div>\r\n              <div className=\"title alert-heading h6\">\r\n                {\" \"}\r\n                <RiNotification3Fill />\r\n                {notification.title}\r\n              </div>\r\n              <div className=\"body alert-body\">\r\n                <div className=\"content\">{notification.text}</div>\r\n              </div>\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <small>\r\n                  {new Date(notification.created_at).toLocaleDateString()}{\" \"}\r\n                  &nbsp;{\" \"}\r\n                </small>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"names":["useContext","MainContext","url","setNotiNum","notifications","useState","noti","setNoti","isLoading","setIsLoading","useEffect","fetch","method","headers","credentials","then","res","json","data","status","message","catch","err","console","log","className","position","length","map","notification","onClick","id","success","filter","notifi","warning","fill","title","text","style","textAlign","Date","created_at","toLocaleDateString","payment_id","Math","random"],"sourceRoot":""}