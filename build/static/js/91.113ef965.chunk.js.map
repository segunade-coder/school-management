{"version":3,"file":"static/js/91.113ef965.chunk.js","mappings":"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","sources":["components/Main/payments/Payment.jsx"],"sourcesContent":["import React, {\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n} from \"react\";\r\nimport \"./payment.css\";\r\nimport { MainContext } from \"../Helpers/Context\";\r\nimport Loader from \"../../small_comps/loader/Loader\";\r\nimport { RiRefreshLine } from \"react-icons/ri\";\r\nimport { Notifications } from \"react-push-notification\";\r\nimport ModalCont from \"../../small_comps/modal/ModalCont\";\r\nimport logo from \"../../../images/receipt_logo.jpeg\";\r\n\r\nconst Payment = () => {\r\n  let date = new Date();\r\n  let { url, loggedUser, notifications, io } = useContext(MainContext);\r\n  let dateArr = [\r\n    date.getDate() < 10 ? `0${date.getDate()}` : date.getDate(),\r\n    date.getUTCMonth() + 1 < 10\r\n      ? `0${date.getUTCMonth() + 1}`\r\n      : date.getUTCMonth() + 1,\r\n    date.getUTCFullYear(),\r\n  ];\r\n  let randomNumber = `${Math.floor(Math.random() * 99999)}`.padStart(\r\n    5,\r\n    Math.floor(Math.random() * 99999)\r\n  );\r\n  const [autoFees, setAutoFees] = useState(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [isPending, startTransition] = useTransition();\r\n  const [name, setName] = useState(\"\");\r\n  const [autoName, setAutoName] = useState([]);\r\n  const [studentClass, setStudentClass] = useState(\"\");\r\n  const [classesArray, setClassesArray] = useState([]);\r\n  const [DOG, setDOG] = useState(dateArr.join(\"/\"));\r\n  const [paymentId, setPaymentId] = useState(randomNumber);\r\n  const [DOP, setDOP] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n  const [termArray, setTermArray] = useState([]);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentFor, setPaymentFor] = useState(\"\");\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [feePaid, setFeePaid] = useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const [DOB, setDOB] = useState(\"\");\r\n  const [remark, setRemark] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [sessionArray, setSessionArray] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [paymentForArr, setPaymentForArr] = useState([]);\r\n  const [paymentMethodArr, setPaymentMethodArr] = useState([]);\r\n  const [showDOB, setshowDOB] = useState(false);\r\n  const [ErrArr, setErrArr] = useState([]);\r\n  const [PTA, setPTA] = useState(\"\");\r\n  const [lesson, setLesson] = useState(\"\");\r\n  const [viewName, setViewName] = useState(\"\");\r\n  const [viewClass, setViewClass] = useState(\"\");\r\n  const [viewPaymentId, setViewPaymentId] = useState(\"\");\r\n  const [viewTotal, setViewTotal] = useState(\"\");\r\n  const [viewBalance, setViewBalance] = useState(\"\");\r\n  const [viewRemark, setViewRemark] = useState([]);\r\n  const [amountsPaid, setamountsPaid] = useState([]);\r\n  const [totalPaid, setTotalPaid] = useState(0);\r\n  const [saveTimes, setSaveTimes] = useState(0);\r\n  const viewdate = useRef([]);\r\n  const [specialDiscount, setspecialDiscount] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`${url}/main/payment/classes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status) {\r\n          let newCls;\r\n          newCls = data?.message[0];\r\n          startTransition(() => {\r\n            try {\r\n              setAutoFees(new Map(JSON?.parse(newCls?.fees)));\r\n              setTermArray(newCls?.terms?.split(\",\"));\r\n              setPaymentForArr(newCls.payment_for?.split(\",\"));\r\n              setSessionArray(newCls?.sessions?.split(\",\"));\r\n              setPaymentMethodArr(newCls?.payment_method?.split(\",\"));\r\n              setSession(newCls?.current_session);\r\n              setTerm(newCls?.current_term?.toUpperCase());\r\n              setClassesArray(JSON?.parse(newCls?.classes));\r\n            } catch {\r\n              notifications.warning(\"Failed to set datas\");\r\n            }\r\n          });\r\n        }\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [document.readyState]);\r\n\r\n  let changeClass = (e) => {\r\n    setStudentClass(e?.target?.value);\r\n    autoTotal(e?.target?.value);\r\n  };\r\n\r\n  let autoTotal = (student) => {\r\n    try {\r\n      let splitName = student?.split(\" \");\r\n      if (\r\n        splitName?.length > 2 &&\r\n        splitName[0]?.toLowerCase() !== \"kindergaten\"\r\n      ) {\r\n        if (\r\n          splitName[0]?.toLowerCase().startsWith(\"lower\") ||\r\n          splitName[0]?.toLowerCase().startsWith(\"middle\") ||\r\n          splitName[0]?.toLowerCase().startsWith(\"upper\")\r\n        ) {\r\n          if (\r\n            splitName[splitName.length - 2]?.toLowerCase().includes(\"new\") &&\r\n            splitName[splitName.length - 1]?.toLowerCase().includes(\"admission\")\r\n          ) {\r\n            splitName.pop();\r\n            splitName.pop();\r\n          } else {\r\n            if (splitName?.length > 3) {\r\n              splitName.pop();\r\n            }\r\n          }\r\n        } else {\r\n          splitName = splitName?.splice(0, 2);\r\n        }\r\n      } else {\r\n        splitName = splitName?.splice(0, 1);\r\n      }\r\n      autoFees?.has(splitName?.join(\" \")?.toLowerCase()) &&\r\n        setTotalFee(autoFees?.get(splitName?.join(\" \")?.toLowerCase()));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  let changePaymentFor = (e) => {\r\n    setPaymentFor(e?.target?.value);\r\n    autoTotal(e?.target?.value);\r\n    if (e?.target?.value?.includes(\"PART PAYMENT\")) {\r\n      setshowDOB(true);\r\n    } else {\r\n      setshowDOB(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let e = document.getElementById(\"payment_made\");\r\n    if (feePaid) {\r\n      if (parseInt(feePaid) > parseInt(totalFee)) {\r\n        e.style.border = \"1px solid red\";\r\n        notifications?.warning(\"advance is greater than balance\");\r\n        setErrArr([\"advance is greater than balance\"]);\r\n        setFeePaid(0);\r\n        setBalance(0);\r\n      } else {\r\n        e.style.border = \"1px solid gray\";\r\n        setBalance(parseInt(totalFee) - parseInt(feePaid));\r\n        setErrArr([]);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [totalFee]);\r\n\r\n  let feePaidFnc = (e) => {\r\n    setFeePaid(e?.target?.value);\r\n    if (parseInt(e?.target?.value) > parseInt(totalFee)) {\r\n      e.target.style.border = \"1px solid red\";\r\n      notifications.warning(\"Advance is greater than balance\");\r\n      setErrArr([\"advance is greater than balance\"]);\r\n      setBalance(parseInt(totalFee) - parseInt(e?.target?.value));\r\n    } else {\r\n      e.target.style.border = \"1px solid gray\";\r\n      setBalance(parseInt(totalFee) - parseInt(e?.target?.value));\r\n      setErrArr([]);\r\n    }\r\n  };\r\n\r\n  let autoRemark = () => {\r\n    if (term && paymentFor && paymentMethod) {\r\n      if (balance === 0) {\r\n        setRemark(\r\n          `${term} PAYMENT FOR ${paymentFor}, THROUGH ${paymentMethod} (${session}) ${\r\n            specialDiscount !== \"\" &&\r\n            specialDiscount?.toLowerCase() !== \"none\" &&\r\n            paymentFor?.toLowerCase() !== \"busfare\"\r\n              ? specialDiscount\r\n              : \"\"\r\n          }`\r\n        );\r\n      } else {\r\n        setRemark(\r\n          `PART PAYMENT MADE FOR ${term}, THROUGH ${paymentMethod} (${session}) ${\r\n            specialDiscount !== \"\" && specialDiscount?.toLowerCase() !== \"none\"\r\n              ? specialDiscount\r\n              : \"\"\r\n          }`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const findName = (name) => {\r\n    name?.length > 1\r\n      ? startTransition(() =>\r\n          fetch(`${url}/main/payment/findName`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            credentials: \"include\",\r\n            body: JSON.stringify({ name }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              if (data?.status) {\r\n                setAutoName(data?.message);\r\n              }\r\n            })\r\n            .catch((err) => console.log(err))\r\n        )\r\n      : setAutoName([]);\r\n  };\r\n  const clickAutoName = (id) => {\r\n    let details = autoName?.find((item) => item?.id === id);\r\n    setName(details?.name?.toUpperCase());\r\n    setStudentClass(details?.class?.toUpperCase());\r\n    autoTotal(details?.class?.toUpperCase());\r\n    setspecialDiscount(details?.discounts?.toUpperCase());\r\n    setAutoName([]);\r\n    autoTotal(studentClass);\r\n  };\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      name === \"\" ||\r\n      paymentId === \"\" ||\r\n      studentClass === \"\" ||\r\n      DOP === \"\" ||\r\n      DOG === \"\" ||\r\n      paymentFor === \"\" ||\r\n      paymentMethod === \"\" ||\r\n      term === \"\" ||\r\n      totalFee === \"\" ||\r\n      feePaid === \"\" ||\r\n      studentClass === \"\" ||\r\n      remark === \"\" ||\r\n      balance === \"\"\r\n    ) {\r\n      setError(\"All fields are required\");\r\n      notifications.warning(\"All fields are required\");\r\n    } else {\r\n      setError(\"\");\r\n      setIsLoading(true);\r\n      if (DOB === \"\" && showDOB === true) {\r\n        setError(\"All fields are required\");\r\n      } else {\r\n        if (ErrArr.length > 0) {\r\n          setIsLoading(false);\r\n          notifications.warning(ErrArr[0]);\r\n          return;\r\n        } else {\r\n          if (PTA === \"\" || lesson === \"\") {\r\n            setIsLoading(false);\r\n            notifications.warning(\"Set PTA and lesson deduction\");\r\n            showModal();\r\n            return;\r\n          } else {\r\n            let datas = {\r\n              name,\r\n              paymentId,\r\n              studentClass,\r\n              DOP,\r\n              DOB,\r\n              DOG,\r\n              lesson,\r\n              PTA,\r\n              paymentFor,\r\n              paymentMethod,\r\n              term,\r\n              totalFee,\r\n              feePaid,\r\n              balance,\r\n              remark,\r\n              session,\r\n              loggedUser,\r\n            };\r\n            fetch(`${url}/main/payment/save`, {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              credentials: \"include\",\r\n              body: JSON.stringify({ datas }),\r\n            })\r\n              .then((res) => res.json())\r\n              .then((data) => {\r\n                setIsLoading(false);\r\n                if (!data.status) {\r\n                  setError(data.message);\r\n                  notifications.warning(data.message);\r\n                } else {\r\n                  setError(\"\");\r\n                  notifications.success(\"Successful\");\r\n                  io.emit(\"display_notification\", {\r\n                    type: \"others\",\r\n                    name: name.toLowerCase(),\r\n                    payment_id: paymentId,\r\n                    amount_paid: feePaid,\r\n                  });\r\n                  reset();\r\n                  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                setIsLoading(false);\r\n                console.log(err);\r\n              });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setStudentClass(\"\");\r\n    setPaymentId(\r\n      `${Math.floor(Math.random() * 99999)}`.padStart(\r\n        5,\r\n        Math.floor(Math.random() * 99999)\r\n      )\r\n    );\r\n    setSaveTimes(0);\r\n    setDOP(\"\");\r\n    setPaymentMethod(\"\");\r\n    setPaymentFor(\"\");\r\n    setTotalFee(0);\r\n    setFeePaid(0);\r\n    setBalance(0);\r\n    setDOB(\"\");\r\n    setRemark(\"\");\r\n    setError(\"\");\r\n    setshowDOB(false);\r\n    setAutoName([]);\r\n  };\r\n  let showPrint = (key) => {\r\n    if (key) {\r\n      fetch(`${url}/main/records/get-view?key=${key}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.status) {\r\n            let remarks = [];\r\n            let amountPaidArr = [];\r\n            let dateArr = [];\r\n            let totalPaid1 = 0;\r\n            let DOGArr = [];\r\n            setViewName(data.message[0].name);\r\n            setViewClass(data.message[0].class);\r\n            setViewPaymentId(data.message[0].payment_id);\r\n            setViewTotal(data.message[0].expected_payment);\r\n            setViewBalance(data.message[0].balance);\r\n            if (data.message.length > 1) {\r\n              data.message.forEach((details) => {\r\n                dateArr.push(details.DOP);\r\n                remarks.push(details.remark);\r\n                amountPaidArr.push(details.amount_paid);\r\n                totalPaid1 += parseInt(details.amount_paid);\r\n                DOGArr.push(details.DOG);\r\n              });\r\n              setViewRemark(remarks);\r\n              setamountsPaid(amountPaidArr);\r\n              setTotalPaid(totalPaid1);\r\n              viewdate.current = dateArr;\r\n            } else {\r\n              setViewRemark([data.message[0].remark]);\r\n              viewdate.current = [data.message[0].DOP];\r\n              setamountsPaid([data.message[0].amount_paid]);\r\n              setTotalPaid(data.message[0].amount_paid);\r\n              setDOG([data.message[0].DOG]);\r\n            }\r\n            reset();\r\n            document\r\n              .getElementsByClassName(\"print-modal\")[0]\r\n              .classList.add(\"show-modal\");\r\n            document.body.style.overflow = \"hidden\";\r\n            window.scrollTo(0, parseInt(window.scrollY || \"0\") * -1);\r\n          } else {\r\n            notifications.warning(data.message);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  const handlePrint = (e) => {\r\n    e.preventDefault();\r\n    if (saveTimes === 0) {\r\n      if (\r\n        name === \"\" ||\r\n        paymentId === \"\" ||\r\n        studentClass === \"\" ||\r\n        DOP === \"\" ||\r\n        DOG === \"\" ||\r\n        paymentFor === \"\" ||\r\n        paymentMethod === \"\" ||\r\n        term === \"\" ||\r\n        totalFee === \"\" ||\r\n        feePaid === \"\" ||\r\n        studentClass === \"\" ||\r\n        remark === \"\" ||\r\n        balance === \"\"\r\n      ) {\r\n        setError(\"All fields are required\");\r\n        notifications.warning(\"All fields are required\");\r\n      } else {\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n        if (DOB === \"\" && showDOB === true) {\r\n          setError(\"All fields are required\");\r\n        } else {\r\n          if (ErrArr.length > 0) {\r\n            setIsLoading(false);\r\n            notifications.warning(ErrArr[0]);\r\n            return;\r\n          } else {\r\n            if (PTA === \"\" || lesson === \"\") {\r\n              setIsLoading(false);\r\n              notifications.warning(\"Set PTA and lesson deduction\");\r\n              showModal();\r\n              return;\r\n            } else {\r\n              let datas = {\r\n                name,\r\n                paymentId,\r\n                studentClass,\r\n                DOP,\r\n                DOB,\r\n                DOG,\r\n                lesson,\r\n                PTA,\r\n                paymentFor,\r\n                paymentMethod,\r\n                term,\r\n                totalFee,\r\n                feePaid,\r\n                balance,\r\n                remark,\r\n                session,\r\n                loggedUser,\r\n              };\r\n              fetch(`${url}/main/payment/save`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                credentials: \"include\",\r\n                body: JSON.stringify({ datas }),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                  setIsLoading(false);\r\n                  if (!data.status) {\r\n                    setError(data.message);\r\n                    notifications.warning(data.message);\r\n                  } else {\r\n                    setError(\"\");\r\n                    notifications.success(\"Successful\");\r\n                    io.emit(\"display_notification\", {\r\n                      type: \"others\",\r\n                      name: name.toLowerCase(),\r\n                      payment_id: paymentId,\r\n                      amount_paid: feePaid,\r\n                    });\r\n                    setSaveTimes(1);\r\n                    showPrint(data.key_id);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  setIsLoading(false);\r\n                  console.log(err);\r\n                });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (window.confirm(\"Already saved. Do you want to save again?\")) {\r\n        handlePrint();\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n  let dob = () => {\r\n    if (feePaid > 0) {\r\n      if (ErrArr?.length === 0 && parseInt(totalFee) - parseInt(feePaid) > 0) {\r\n        setshowDOB(true);\r\n      }\r\n      if (ErrArr.length === 0 && parseInt(totalFee) - parseInt(feePaid) === 0) {\r\n        setshowDOB(false);\r\n      }\r\n    } else {\r\n      setshowDOB(false);\r\n    }\r\n    if (parseInt(feePaid) > parseInt(totalFee)) {\r\n      document.getElementById(\"payment_made\").style.border = \"1px solid red\";\r\n      notifications.warning(\"Advance is greater than balance\");\r\n      setErrArr([\"advance is greater than balance\"]);\r\n      setBalance(parseInt(totalFee) - parseInt(feePaid));\r\n    } else {\r\n      document.getElementById(\"payment_made\").style.border = \"1px solid gray\";\r\n      setBalance(parseInt(totalFee) - parseInt(feePaid));\r\n      setErrArr([]);\r\n    }\r\n  };\r\n  let autoAdvance = () => {\r\n    if (totalFee) {\r\n      setFeePaid(totalFee);\r\n    }\r\n  };\r\n  let setDOBFnc = (e) => {\r\n    if (new Date(e.target.value) < new Date(Date.now())) {\r\n      notifications.warning(\"Balance Date is should be in the future\");\r\n      e.target.style.border = \"1px solid red\";\r\n    } else {\r\n      e.target.style.border = \"1px solid gray\";\r\n      setDOB(e.target.value);\r\n    }\r\n  };\r\n  let showModal = () => {\r\n    document\r\n      .getElementsByClassName(\"set-lesson\")[0]\r\n      .classList.add(\"show-modal\");\r\n    document.body.style.overflow = \"hidden\";\r\n    window.scrollTo(0, parseInt(window.scrollY || \"0\") * -1);\r\n  };\r\n  let closeModal = () => {\r\n    document\r\n      .getElementsByClassName(\"set-lesson\")[0]\r\n      .classList.remove(\"show-modal\");\r\n    document.body.style.overflow = \"auto\";\r\n    document.body.style.top = \"\";\r\n    document.getElementsByClassName(\"advance\")[0].scrollIntoView();\r\n  };\r\n  let handlePrint2 = () => {\r\n    window.print();\r\n  };\r\n  return (\r\n    <div className=\"__payment\">\r\n      <Notifications position=\"top-right\" />\r\n      <h2>Make Payment</h2>\r\n      <div style={{ color: \"red\" }}>{error && error}</div>\r\n      <form>\r\n        <div className=\"refresh\">\r\n          <RiRefreshLine title=\"refresh\" onClick={(e) => reset()} />\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <div className=\"input-autocomplete-cont\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              id=\"name\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              autoFocus={true}\r\n              onChange={(e) => setName(e?.target?.value)}\r\n              onKeyUp={() => findName(name)}\r\n              autoComplete=\"off\"\r\n            />\r\n            <div className=\"output-container\">\r\n              <div className=\"output-names\">\r\n                {autoName &&\r\n                  autoName?.map((item) => (\r\n                    <div\r\n                      className=\"names\"\r\n                      onClick={() => clickAutoName(item?.id)}\r\n                      key={item?.id}\r\n                    >\r\n                      <span>{item?.name}</span> <span>{item?.class}</span>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"payment_id\">Payment ID</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"\"\r\n            id=\"payment_id\"\r\n            value={paymentId}\r\n            onChange={(e) => setPaymentId(e?.target?.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"classes\">Class</label>\r\n          <select\r\n            id=\"classes\"\r\n            value={studentClass}\r\n            onChange={(e) => changeClass(e)}\r\n          >\r\n            <option value=\"\"> Select Class</option>\r\n            {classesArray &&\r\n              classesArray?.map((elem) => (\r\n                <option value={elem?.toUpperCase()} key={Math?.random()}>\r\n                  {elem?.toUpperCase()}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <input\r\n          hidden\r\n          style={{ fontFamily: \"monospace\" }}\r\n          type=\"text\"\r\n          value={DOG}\r\n          onChange={(e) => setDOG(e?.target?.value)}\r\n        />\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"date_of_payment\">Date Of Payment</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"\"\r\n            id=\"date_of_payment\"\r\n            value={DOP}\r\n            onChange={(e) => setDOP(e?.target?.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"payment_for\">Payment For</label>\r\n          <select\r\n            id=\"payment_for\"\r\n            value={paymentFor}\r\n            onChange={(e) => changePaymentFor(e)}\r\n          >\r\n            <option value=\"\">Select Payment for</option>\r\n            {paymentForArr.map((termVal) => (\r\n              <option value={termVal.trim().toUpperCase()} key={termVal}>\r\n                {termVal.trim().toUpperCase()}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"payment_method\">Payment Method</label>\r\n          <select\r\n            id=\"payment_method\"\r\n            value={paymentMethod}\r\n            onChange={(e) => setPaymentMethod(e?.target?.value)}\r\n          >\r\n            <option value=\"\">Select Payment Method</option>\r\n            {paymentMethodArr &&\r\n              paymentMethodArr?.map((termVal) => (\r\n                <option value={termVal?.trim()?.toUpperCase()} key={termVal}>\r\n                  {termVal?.trim()?.toUpperCase()}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"term\">Term</label>\r\n          <select\r\n            id=\"term\"\r\n            value={term}\r\n            onChange={(e) => setTerm(e?.target?.value)}\r\n          >\r\n            <option value=\"\">Select Term</option>\r\n            {termArray?.map((termVal) => (\r\n              <option value={termVal?.trim()?.toUpperCase()} key={termVal}>\r\n                {termVal?.trim()?.toUpperCase()}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"total_fee\">Total Fee</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"total_fee\"\r\n            value={totalFee}\r\n            onChange={(e) => setTotalFee(e?.target?.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-cont pta\">\r\n          <div className=\"show-pta\" onClick={() => showModal()}>\r\n            Deduct PTA and Lesson\r\n          </div>\r\n        </div>\r\n        <div className=\"input-cont advance\">\r\n          <label htmlFor=\"payment_made\">Advance Fee</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"payment_made\"\r\n            value={feePaid}\r\n            onChange={(e) => feePaidFnc(e)}\r\n            onBlur={(e) => dob()}\r\n            onDoubleClick={() => autoAdvance()}\r\n          />\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"balance\">Balance</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"balance\"\r\n            disabled\r\n            value={balance}\r\n            onChange={(e) => setBalance(e?.target?.value)}\r\n          />\r\n        </div>\r\n        {showDOB && (\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"date_of_balance\">Date Of Balance</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_of_balance\"\r\n              value={DOB}\r\n              onChange={(e) => setDOBFnc(e)}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"session\">Session</label>\r\n          <select\r\n            id=\"session\"\r\n            value={session}\r\n            onChange={(e) => setSession(e?.target?.value)}\r\n          >\r\n            <option value=\"\">Select Session</option>\r\n            {sessionArray?.map((sessionVal) => (\r\n              <option value={sessionVal?.trim()} key={sessionVal}>\r\n                {sessionVal?.trim()}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <label htmlFor=\"remark\">Custom Remark</label>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Remark\"\r\n            value={remark}\r\n            onChange={(e) => setRemark(e?.target?.value)}\r\n            onDoubleClick={autoRemark}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"btn-cont mt-3\">\r\n          <button\r\n            onClick={(e) => handleSave(e)}\r\n            className={\r\n              isLoading\r\n                ? \"btn btn-outline-success disabled\"\r\n                : \"btn btn-outline-success\"\r\n            }\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? <Loader.Loader /> : \"Save\"}\r\n          </button>\r\n          <button\r\n            onClick={(e) => handlePrint(e)}\r\n            className=\"btn btn-outline-primary\"\r\n          >\r\n            Print\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <ModalCont\r\n        title=\"Lesson and P.T.A Deduction\"\r\n        classModal=\"set-lesson\"\r\n        save={closeModal}\r\n      >\r\n        <form action=\"\">\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"PTA\">P.T.A</label>\r\n            <input\r\n              type=\"number\"\r\n              value={PTA}\r\n              id=\"PTA\"\r\n              onChange={(e) => setPTA(e?.target?.value)}\r\n            />\r\n          </div>\r\n          <div className=\"input-cont\">\r\n            <label htmlFor=\"lesson\">Lesson</label>\r\n            <input\r\n              type=\"number\"\r\n              value={lesson}\r\n              id=\"total\"\r\n              onChange={(e) => setLesson(e?.target?.value)}\r\n            />\r\n          </div>\r\n        </form>\r\n      </ModalCont>\r\n      <ModalCont\r\n        title={\"\"}\r\n        classModal=\"print-modal\"\r\n        btn=\"Print\"\r\n        save={handlePrint2}\r\n      >\r\n        <div className=\"print-container\">\r\n          <div className=\"img-cont\">\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <h4 className=\"h5\">School Fees Report</h4>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            DATE & TIME &nbsp; {new Date(Date.now()).toLocaleDateString()}{\" \"}\r\n            &nbsp; {new Date(Date.now()).toLocaleTimeString()}\r\n          </div>\r\n          <hr />\r\n          <div className=\"student-info\">\r\n            <h4 className=\"h6\">Student Info</h4>\r\n            <div className=\"table-responsive\">\r\n              <div className=\"p-table\">\r\n                <div className=\"tbody\">\r\n                  <span>&nbsp; Name</span>\r\n                  <span className=\"span\">{viewName?.toUpperCase()}</span>\r\n                  <span>Class</span>\r\n                  <span className=\"last span\">{viewClass?.toUpperCase()}</span>\r\n                  <hr />\r\n                  <span>&nbsp; Payment ID</span>\r\n                  <span className=\"span\">{viewPaymentId}</span>\r\n                  <span>DOP</span>\r\n                  <span className=\"last span\">{viewdate?.current[0]}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"fee-info\">\r\n            <h4 className=\"h6\">Fee Info</h4>\r\n            <div className=\"table-responsive\">\r\n              <div className=\"p-table\">\r\n                {/* <thead>\r\n                </thead> */}\r\n                <div className=\"tbody\">\r\n                  <span>&nbsp;Date</span>\r\n                  <span>Paid</span>\r\n                  <span className=\"last\">Remark</span>\r\n                  {viewRemark &&\r\n                    viewRemark?.map((re, index) => (\r\n                      <span\r\n                        key={re + Math.random()}\r\n                        title={DOG[index]}\r\n                        className=\"tr\"\r\n                      >\r\n                        <span> &nbsp;{viewdate?.current[index]}</span>\r\n                        <span>\r\n                          {parseInt(amountsPaid[index])?.toLocaleString()}\r\n                        </span>\r\n                        <span className=\"last\">{re?.toUpperCase()}</span>\r\n                      </span>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"others-cont\">\r\n            <div className=\"others\">\r\n              {\" \"}\r\n              <div>Total Fees:</div>&#x20A6;\r\n              {viewTotal?.toLocaleString()}\r\n            </div>\r\n            <div className=\"others\">\r\n              {\" \"}\r\n              <div>Total Paid: </div>&#x20A6;\r\n              {totalPaid?.toLocaleString()}\r\n            </div>\r\n            <div className=\"others\">\r\n              {\" \"}\r\n              <div>Balance: </div>&#x20A6;\r\n              {viewBalance?.toLocaleString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ModalCont>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"names":["date","Date","useContext","MainContext","url","loggedUser","notifications","io","dateArr","getDate","getUTCMonth","getUTCFullYear","randomNumber","Math","floor","random","padStart","useState","autoFees","setAutoFees","useTransition","startTransition","name","setName","autoName","setAutoName","studentClass","setStudentClass","classesArray","setClassesArray","join","DOG","setDOG","paymentId","setPaymentId","DOP","setDOP","term","setTerm","termArray","setTermArray","paymentMethod","setPaymentMethod","paymentFor","setPaymentFor","totalFee","setTotalFee","feePaid","setFeePaid","balance","setBalance","DOB","setDOB","remark","setRemark","session","setSession","sessionArray","setSessionArray","error","setError","paymentForArr","setPaymentForArr","paymentMethodArr","setPaymentMethodArr","showDOB","setshowDOB","ErrArr","setErrArr","PTA","setPTA","lesson","setLesson","viewName","setViewName","viewClass","setViewClass","viewPaymentId","setViewPaymentId","viewTotal","setViewTotal","viewBalance","setViewBalance","viewRemark","setViewRemark","amountsPaid","setamountsPaid","totalPaid","setTotalPaid","saveTimes","setSaveTimes","viewdate","useRef","specialDiscount","setspecialDiscount","isLoading","setIsLoading","useEffect","fetch","method","headers","credentials","then","res","json","data","newCls","status","message","Map","JSON","parse","fees","terms","split","payment_for","sessions","payment_method","current_session","current_term","toUpperCase","classes","warning","catch","err","console","log","document","readyState","autoTotal","student","splitName","length","toLowerCase","startsWith","includes","pop","splice","has","get","e","getElementById","parseInt","style","border","reset","handlePrint","preventDefault","showModal","datas","body","stringify","key","success","emit","type","payment_id","amount_paid","key_id","remarks","amountPaidArr","totalPaid1","DOGArr","class","expected_payment","forEach","details","push","current","getElementsByClassName","classList","add","overflow","window","scrollTo","scrollY","confirm","className","Notifications","position","color","title","onClick","htmlFor","id","placeholder","value","autoFocus","onChange","target","onKeyUp","findName","autoComplete","map","item","find","discounts","clickAutoName","changeClass","elem","hidden","fontFamily","changePaymentFor","termVal","trim","feePaidFnc","onBlur","onDoubleClick","disabled","now","setDOBFnc","sessionVal","top","behavior","handleSave","Loader","ModalCont","classModal","save","remove","scrollIntoView","action","btn","print","src","logo","alt","textAlign","toLocaleDateString","toLocaleTimeString","re","index","toLocaleString"],"sourceRoot":""}